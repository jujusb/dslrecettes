grammar cuisine.recipe.Recipe with org.eclipse.xtext.common.Terminals

generate recipe "http://www.recipe.cuisine/Recipe"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	(defTechniques+=Technique | recipes+=Recipe)*;
	
Technique:
	"define" name=WORD param+=ParamTechnique+
	;

ParamTechnique: 
	"[" objectFac=IngrUslTech "]" | object=IngrUslTech | "{" choices=Choices "}"
;

Choices: 
	choix+=CustomString ("," choix+=CustomString)* | "{" choices+=Choices "}" ("," "{" choices+=Choices "}")*  
;

IngrUslTech:
	"ingredient" | "ustensil" | "preparation" | "temperature" | "tool" | 'quantity' | 'time'
;

Recipe:
	"recipe" "{" "name" ":" name=CustomString "time" ":" time=DOUBLE "nb_pers" ":" nb=DOUBLE ingredients=Ingredients ustensils=Ustensils instructions=Instructions "}" 
;

Ustensils:
	{Ustensils} "ustensils" ":" "{" (ust+=Ustensil (','ust+=Ustensil)*)? "}"
;

Ustensil:
	name=CustomString ("@" tag=WORD)? 
;

Ingredients : 
	{Ingredients} "ingredients" ":" "{" (ingr+=Ingredient (',' ingr+=Ingredient)*)? "}"
;

Ingredient:
	name=CustomString ":" qte=Quantite ("#" group=WORD)? ("@" tag=WORD)? 
;

Quantite:
	qt=DOUBLE (quantificateur=Quantificateurs)? | {Quantite} "any"
;

Quantificateurs:
	mesure=Mesure 
;

Mesure:
	("k" | "h" | "da" | "d" | "c" | "m" )? ("g" | "L"| "l") | "càc" | "cc" | "càs" | "cs" 
;


Instructions: 
	{Instructions} "instructions" ":" "{" (inst+=Instruction (';' inst+=Instruction)*)? "}"
;

Instruction:
	technique=WORD (parameters+=InstructionParameter (',' parameters+=InstructionParameter)*)?  (comment=COMMENT)? ('->' preparation=CustomString)?
;

Timing:
	"s" | "min" | "h" | "days"	
;
Temp: 
	"°C" | "°F"
;

InstructionParameter:
	parameter=CustomString | '#' htag=WORD | '@' atag=WORD | qte=DOUBLE (qt=Quantificateurs | time=Timing | temp=Temp)
;


CustomString:
	name+=WORD+
;

terminal DOUBLE returns ecore::EDouble : INT('.'INT)? ;
terminal WORD returns ecore::EString : '^'?('a'..'z'|'A'..'Z'|'À'..'ÿ'|'\''|'('|')') ('0'..'9'|'a'..'z'|'A'..'Z'|'À'..'ÿ'|'\''|'('|')'|'_')*;
terminal COMMENT returns ecore::EString : '"' -> '"';
