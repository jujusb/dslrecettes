grammar cuisine.recipe.Recipe with org.eclipse.xtext.common.Terminals

generate recipe "http://www.recipe.cuisine/Recipe"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	(defTechniques+=Technique | recipes+=Recipe)*; // Sequence of techniques and recipes
	
Technique:
	"define" name=WORD param+=ParamTechnique+ // Definition of a technique
	;

ParamTechnique: 
	"[" objectFac=TechParameterType "]" // Optional parameter
	| object=TechParameterType // Mandatory parameter
	| "{" choices=Choices "}"
;

Choices: // A list of words or groups of words that qualify the result
	choice+=CustomString ("," choice+=CustomString)* | "{" choices+=Choice "}" ("," "{" choices+=Choice "}")*  
;

Choice: 
	choix+=CustomString ("," choix+=CustomString)*
;

TechParameterType: // The type of an element that can be used as a parameter of a technique
	"ingredient" | "utensil" | "preparation" | "temperature" | "tool" | 'quantity' | 'time'
;

Recipe:
	"recipe" "{"
		"name" ":" name=CustomString
		"time" ":" (time+=DOUBLE timeUnit+=Timing)+
		"nb_pers" ":" nb=DOUBLE
		ingredients=IngredientList
		utensils=UtensilList
		instructions=InstructionList
	"}" 
;

IngredientList : // List of all the requires ingredients in the recipe
	{IngredientList} "ingredients" ":" "{" (ingr+=Ingredient (',' ingr+=Ingredient)*)? "}"
;

Ingredient: // Definition of a specific ingredient
	name=CustomString ":" // Ingredient name : can be in multiple words
	qty=Quantity
	("#" group=WORD)? // To refer to several elements as a group
	("@" tag=WORD)? // To refer to an element using a shorter word
;


UtensilList: // List of all the utensils required for the recipe
	{UtensilList} "utensils" ":" "{" (uten+=Utensil (','uten+=Utensil)*)? "}"
;

Utensil: // Definition of a specific utensil, the tag may be used in order to have a shorter reference
	name=CustomString ("@" tag=WORD)? 
;
Quantity:
	qt=DOUBLE (quantifier=Quantifier)? | {Quantity} "any"
;

Quantifier:
	mesure=Measure 
;

Measure:
	"kg" | "hg" | "dag" | "g" | "dg" | "cg" | "mg" | "kl" | "hl" | "dal" | "l" | "dl" | "cl" | "ml"| "kL" | "hL" | "daL" | "L" | "dL" | "cL" | "mL" | "càc" | "cc" | "càs" | "cs" 
;


InstructionList: 
	{InstructionList} "instructions" ":" "{" (inst+=Instruction (';' inst+=Instruction)*)? "}"
;

Instruction:
	technique=WORD (parameters+=InstructionParameter (',' parameters+=InstructionParameter)*)?  (comment=COMMENT)? ('->' preparation=CustomString)?
;

Timing:
	"s" | "min" | "h" | "days"	
;
Temp: 
	"°C" | "°F"
;

InstructionParameter:
	parameter=CustomString | '#' htag=WORD | '@' atag=WORD | qte=DOUBLE (qt=Quantifier | time=Timing | temp=Temp)
;


CustomString:
	name+=WORD+
;



terminal DOUBLE returns ecore::EDouble : INT('.'INT)? ;
terminal WORD returns ecore::EString : '^'?('a'..'z'|'A'..'Z'|'À'..'ÿ'|'\''|'('|')') ('0'..'9'|'a'..'z'|'A'..'Z'|'À'..'ÿ'|'\''|'('|')'|'_')*;
terminal COMMENT returns ecore::EString : '"' -> '"';

